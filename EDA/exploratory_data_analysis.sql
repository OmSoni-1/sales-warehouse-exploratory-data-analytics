/*
=========================================================================================================
                SQL Script for Data Exploration and Analysis of Gold Schema Tables
=========================================================================================================

This script performs various data exploration and analysis tasks on the 'gold' schema tables (dim_customers, dim_products, fact_sales).
It includes queries for:
  - Basic data exploration (table/column details).
  - Aggregation queries for sales metrics (total sales, items sold, average price, order count).
  - Counting distinct entities (products, customers, ordering customers).
  - Generating a comprehensive report of key metrics.
  - Analyzing customer demographics (country, gender).
  - Analyzing product categories (total products, average cost, total revenue).
  - Calculating revenue generated by individual customers.
  - Examining the distribution of sold items across countries.

Initial exploration queries (commented out for efficiency):
- Select * from gold.dim_customers;
- Select * from gold.dim_products;
- Select * from gold.fact_sales;
*/
---------------------------------------------------------------------------------------------------------

-- Explore all the objects in the Database
Select * from INFORMATION_SCHEMA.TABLES
order by TABLE_SCHEMA;

---------------------------------------------------------------------------------------------------------

-- Column level details from all the tables/views in the Database
Select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME = 'fact_sales';

---------------------------------------------------------------------------------------------------------

-- Find the Total Sales
Select sum(sales_amount) as total_sales
from gold.fact_sales;
--group by order_number;

---------------------------------------------------------------------------------------------------------

-- Find how many items are sold
Select sum(quantity) as total_items_sold
from gold.fact_sales;

---------------------------------------------------------------------------------------------------------

-- Find the average selling price
Select AVG(price) as average_price
from gold.fact_sales;

---------------------------------------------------------------------------------------------------------

-- Find the Total number of Orders
Select COUNT(DISTINCT order_number) as no_of_orders
from gold.fact_sales;

---------------------------------------------------------------------------------------------------------

-- Find the total number of products
Select COUNT(product_key) as no_of_products
from gold.dim_products;

---------------------------------------------------------------------------------------------------------

-- Find the total number of customers
Select Count(customer_key) as no_of_customers
from gold.dim_customers;

---------------------------------------------------------------------------------------------------------

-- Find the total number of customers that has placed an order
Select COUNT(DISTINCT customer_key) as no_of_ordering_customers
from gold.fact_sales;

-- OR

WITH cte as(
Select DISTINCT c.customer_id
from gold.fact_sales f
left join gold.dim_customers c
ON f.customer_key = c.customer_key
) Select COUNT(*) as no_of_ordering_customers
from cte;

---------------------------------------------------------------------------------------------------------
=========================================================================================================
-- Generate a report that shows all the metrics at once
=========================================================================================================

Select 'Total Sales' as measure_name, sum(sales_amount) as measure_value
from gold.fact_sales

UNION ALL
Select 'Total Sold Quantity' as measure_name, sum(quantity) as measure_value
from gold.fact_sales

UNION ALL
Select 'Average Price' as measure_name, AVG(price) as measure_value
from gold.fact_sales

UNION ALL
Select 'Total Orders' as measure_name, COUNT(DISTINCT order_number) as measure_value
from gold.fact_sales

UNION ALL
Select 'Total no. of Proucts' as measure_name, COUNT(product_key) as measure_value
from gold.dim_products

UNION ALL
Select 'Total no. of Cutomers' as measure_name, Count(customer_key) as measure_value
from gold.dim_customers

UNION ALL
Select 'Total Ordering Customers' as measure_name, COUNT(DISTINCT customer_key) as measure_value
from gold.fact_sales;

---------------------------------------------------------------------------------------------------------

-- Find total customers by countries
SELECT
country,
COUNT (customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

---------------------------------------------------------------------------------------------------------

--Find total customers by gender
Select gender, count(customer_id) as total_customers
from gold.dim_customers
group by gender
ORDER BY total_customers DESC;

---------------------------------------------------------------------------------------------------------

--Find total products by category
Select category, count(product_key) as total_products
from gold.dim_products
group by category
order by total_products DESC;

---------------------------------------------------------------------------------------------------------

--What is the average costs in each category?
Select category, avg(cost) as average_cost
from gold.dim_products
group by category
order by average_cost DESC;

---------------------------------------------------------------------------------------------------------

-- What is the total revenue generated for each category?
Select
p.category,
sum(s.sales_amount) as total_revenue
from gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
group by p.category
order by total_revenue DESC;

---------------------------------------------------------------------------------------------------------

-- Find total revenue generated by each customer
-- Select * from gold.dim_customers
-- Select * from gold.fact_sales

Select
c.customer_key,
sum(s.sales_amount) as revenue_generated
from gold.dim_customers c
LEFT JOIN gold.fact_sales s
ON c.customer_key = s.customer_key
group by c.customer_key
order by revenue_generated DESC;

---------------------------------------------------------------------------------------------------------

--What is the distribution of sold items across countries?
Select
c.country,
SUM(s.quantity) as no_of_sold_items
from gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
group by c.country
ORDER BY no_of_sold_items DESC;

---------------------------------------------------------------------------------------------------------
